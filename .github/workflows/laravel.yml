name: TEST-CI-CD
on:
  push:
    branches: ["workflow"]
  workflow_dispatch:

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
      - name: Criar .Env
        run: echo "${{ secrets.PROJECT_ENV }}" > .env
      - name: Install Dependencies
        run: composer install --no-ansi --no-interaction --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      - name: Installing Package.json
        run: npm install
      - name: Build Assets
        run: npm run build
      - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan test --parallel
      - name: Execute Larastan
        run: ./vendor/bin/phpstan analyse
      - name: Execute Laravel Pint
        run: ./vendor/bin/pint --test

  CI:
    needs: [laravel-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.3
      - name: Criar .Env
        run: echo "${{ secrets.PROJECT_ENV }}" > .env
      - name: Autenticação no Docker
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            sfalsim/hey-professor:${{ github.run_number }}
            sfalsim/hey-professor:latest

  CD:
    needs: [CI]
    runs-on: self-hosted
    steps:
      - name: Verifica se há container existente com o nome "hey-professor"
        id: check_container
        run: |
          if docker ps -a | grep -q hey-professor; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi
      - name: Para e remove o container existente, se necessário
        if: steps.check_container.outputs.exists == 'true'
        run: |
          docker stop hey-professor
          docker rm hey-professor
      - name: Remove a imagem existente
        if: steps.check_container.outputs.exists == 'true'
        run: docker rmi sfalsim/hey-professor:latest
      - uses: actions/checkout@v4.1.3
      - name: Executa o docker compose
        run: docker compose up -d 
      - name: Verifica se o container está rodando
        run: |
          if ! docker ps | grep -q hey-professor; then
            echo "Container hey-professor não está rodando."
            exit 1
